{"version":3,"sources":["MarkdownPreview.js","App.js","Placeholder.js","index.js"],"names":["myPreview","props","console","log","myText","style","id","className","markedOptions","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","value","App","useState","myInput","setMyInput","current","justifyContent","class","type","onChange","event","target","ReactDOM","render","document","getElementById"],"mappings":"8MA4CeA,EAvCG,SAACC,GAEf,OADAC,QAAQC,IAAIF,EAAMG,QAEd,sBAAKC,MAAO,GAAZ,UAcI,iDACA,8BACI,cAAC,kBAAD,CAAiBC,GAAG,UAAUC,UAAU,kBACpCC,cAAe,CACXC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,UAAU,EACVC,UAAU,EACVC,YAAY,EACZC,aAAa,GAIdC,MAAOf,EAAMG,eCJrBa,MAtBf,WAAgB,IAAD,EACiBC,mBCXf,0pCDUF,mBACNC,EADM,KACGC,EADH,KAGb,OADAlB,QAAQC,IAAIgB,EAASA,EAAQE,SAE3B,sBAAKf,GAAG,MAAMD,MAAO,CAAEiB,eAAgB,UAAvC,UACE,sBAAKC,MAAM,aAAX,UACA,qBAAKA,MAAM,UAAX,yCAEE,0BAAUC,KAAK,WAAWlB,GAAG,SAASU,MAAOG,EAASd,MAAO,GAC1DoB,SAAU,SAAAC,GAAWN,EAAWM,EAAMC,OAAOX,aAElD,sBAAKO,MAAM,cAAX,UACA,qBAAKA,MAAM,UAAX,6BAEE,cAAC,EAAD,CAAWnB,OAAQe,EAASb,GAAG,oBElBvCsB,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,U","file":"static/js/main.5af55875.chunk.js","sourcesContent":["import React from 'react'\r\nimport { MarkdownPreview } from 'react-marked-markdown'\r\n// import Prism from 'prism'\r\n\r\n\r\nconst myPreview = (props) => {\r\n    console.log(props.myText)\r\n    return (\r\n        <div style={{ \r\n            // 'display': 'flex',  alignItems: 'center', backgroundColor: \"yellow\", width: \"50vw\", alignContent: \"center\" \r\n        }}>\r\n          \r\n            {/* \r\n            <div className=\"toolbar\" style={{}}>\r\n                <i className=\"fa fa-free-code-camp\" title=\"no-stack-dub-sack\" />\r\n                {props.text}Compontent '' Version:\r\n                <i className=\"fa fa-arrows-alt\" onClick={props.onClick} />\r\n            </div>\r\n            <h1>Raw Version:</h1>\r\n            <h2>{props.myText}</h2> \r\n            */}\r\n\r\n            <h1>Markup Version:</h1>\r\n            <div>\r\n                <MarkdownPreview id=\"preview\" className=\"ui post content\"\r\n                    markedOptions={{\r\n                        gfm: true,\r\n                        tables: true,\r\n                        breaks: true,\r\n                        pedantic: false,\r\n                        sanitize: true,\r\n                        smartLists: true,\r\n                        smartypants: false,\r\n                        // highlight: function (code) {\r\n                        //     return Prism.highlight(code, Prism.languages.javascript, 'javascript');\r\n                        // }\r\n                    }} value={props.myText} \r\n                    \r\n                     />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default myPreview","// import logo from './logo.svg';\n// import './App.css';\nimport React, { useState } from 'react';\nimport MyPreview from './MarkdownPreview'\nimport placeholder from './Placeholder'\n// import CustomPreview from './CustomPreview'\n\n// eslint-disable-next-line no-unused-vars\nconst projectName = 'markdown-previewer';\n\nfunction App() {\n  const [myInput, setMyInput] = useState(placeholder)\n  console.log(myInput, myInput.current)\n  return (\n    <div id=\"app\" style={{ justifyContent: \"center\" }}>\n      <div class=\"editorWrap\">\n      <div class=\"toolbar\">Edit Here (Using Markdown):</div>\n\n        <textarea type=\"textarea\" id=\"editor\" value={myInput} style={{\n        }} onChange={event => { setMyInput(event.target.value) }} />\n      </div>\n      <div class=\"previewWrap\">\n      <div class=\"toolbar\">Preview Markup:</div>\n\n        <MyPreview myText={myInput} id=\"preview1\" />\n        {/* <CustomPreview markdown={myInput} id=\"preview2\" /> */}\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n\n// what I want my output to look like:\n// head\n//  body\n//    div-app\n\n// /div","const placeholder = `# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n\r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n\r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.org), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | -------------\r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbered lists too.\r\n1. Use just 1s if you want!\r\n1. And last but not least, let's not forget embedded images:\r\n\r\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\r\n`;\r\n\r\nexport default placeholder","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n\n"],"sourceRoot":""}